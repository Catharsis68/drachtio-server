name: ACR Build and Push

on:
  push:
    branches: [main, feat, release]
    tags:
      - "*"
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to run on"
        required: true
        default: "main"

env:
  DOCKER_BUILDKIT: "1"
  IMAGE_NAME: vg-drachtio-server
  BUILD_CPUS: "16"

jobs:
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Free Disk Space Before Build
        run: |
          echo "Disk space before cleanup:"
          df -h
          sudo rm -rf /usr/local/.ghcup
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo rm -rf /usr/local/lib/android/sdk/ndk
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/share/boost
          sudo apt-get clean
          echo "Disk space after cleanup:"
          df -h

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64 # Explicitly define platform

      - name: checkout
        uses: actions/checkout@v4.2.2
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Set the Docker tag to use on build
        id: prepare_tag
        run: |-
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          echo "version: raw: $VERSION"

          # Strip "v" prefix from VERSION if it exists
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag for main and feat branches
          if [ "$VERSION" == "main" ] || [ "$VERSION" == "feat" ]; then
            VERSION=latest
          fi

          echo "version: final: $VERSION"
          # Set output for GitHub Actions
          echo "tag=$VERSION" >> $GITHUB_OUTPUT

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.ACR_URL }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push container image with specific tag
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ vars.ACR_URL }}/${{ env.IMAGE_NAME }}:${{ steps.prepare_tag.outputs.tag }}
          cache-from: type=registry,ref=${{ vars.ACR_URL }}/${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ vars.ACR_URL }}/${{ env.IMAGE_NAME }}:buildcache,mode=max
          build-args: |
            BUILD_CPUS=${{ env.BUILD_CPUS }}

      - name: Build and push container image with latest tag
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v6
        with:
          context: .
          # platforms: linux/amd64,linux/arm64 # Specify the architectures
          # file: ./docker/Dockerfile
          tags: ${{ vars.ACR_URL }}/${{ env.IMAGE_NAME }}:latest
          build-args: |
            BUILD_CPUS=16
            DETECTED_TAG=${{ steps.prepare_tag.outputs.tag }}
          push: true
          no-cache: true
